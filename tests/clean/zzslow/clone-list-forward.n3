@prefix : <http://jmv.fr#>.

kb

# clone a list by a forward recursion - design pattern

:l0 :first :v0 ;
    :rest  :l1 .
:l1 :first :v1 ;
    :rest  :l2 .
:l2 :first :v2 ;
    :rest  :nil .

# initial condition
:l0c :clone_of :l0 .

{
  ?L :first ?F .
  ?L :rest  ?R .
  ?LC :clone_of ?L .
} => {
  ?LC :first ?F .
  ?LC :rest ?rc .
  ?rc :clone_of ?R .
} .
fin.

query
?a :clone_of ?b.
fin.
shouldbe
<http://jmv.fr#l0c> <http://jmv.fr#clone_of> <http://jmv.fr#l0> . 
fin.
shouldbe
?a <http://jmv.fr#clone_of> <http://jmv.fr#l1> . 
fin.
shouldbe
?a <http://jmv.fr#clone_of> <http://jmv.fr#l2> . 
fin.
shouldbe
?a <http://jmv.fr#clone_of> :nil .
fin.
thatsall

query
?a :clone_of :l2.
?a :first :v2 ; :rest ?rc. 
?rc :clone_of :nil .
fin.
shouldbetrue
thatsall

query
?a :clone_of :l2.
?a :first :v1. 
fin.
shouldbe
fin.

query
?a :clone_of :nil.
?a :first ?v.
fin.
shouldbe
fin.

