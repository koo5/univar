@keywords a .
@prefix rdf:      <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix string_builtins: <http://loworbit.now.im/rdf/string_builtins#>.

@prefix : <file://>.
kb
(?X).
{ [ ] rdf:first ?X; rdf:rest ?L} <= { ?L rdf:rest [ ] }.


{?x0 :parses_to_hello_with_rest ?a2} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first :hello. ?a3 rdf:rest rdf:nil.
	?x0 rdf:first "h". 
	?x0 rdf:rest ?x1. 
	?x1 rdf:first "e". 
	?x1 rdf:rest ?x2. 
	?x2 rdf:first "l". 
	?x2 rdf:rest ?x3. 
	?x3 rdf:first "l". 
	?x3 rdf:rest ?x4. 
	?x4 rdf:first "o". 
	?x4 rdf:rest ?rest.
}.

{?x0 :parses_to_bye_with_rest ?a2} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first :bye. ?a3 rdf:rest rdf:nil.
	?x0 rdf:first "b". 
	?x0 rdf:rest ?x1. 
	?x1 rdf:first "y". 
	?x1 rdf:rest ?x2. 
	?x2 rdf:first "e". 
	?x2 rdf:rest ?rest.
}.

{?x0 :parses_to_greeting ?a2} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?greeting_type. ?a3 rdf:rest rdf:nil.
	?x0 :parses_to_hello_with_rest (?rest ?greeting_type). 
}.

{?x0 :parses_to_greeting ?a2} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?greeting_type. ?a3 rdf:rest rdf:nil.
	?x0 :parses_to_bye_with_rest (?rest ?greeting_type). 
}.


{?x0 :parses_to_delimiter_with_rest ?rest} <= {
	?x0 rdf:first " ". 
	?x0 rdf:rest ?rest. 
}.

{?x0 :parses_to_delimiter_with_rest ?rest} <= {
	?x0 rdf:first ",". 
	?x0 rdf:rest ?rest. 
}.

{?x a :name. ?x :value ?Y}<={}.

{?x0 :parses_to_name_with_rest ?a2.} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?name. ?a3 rdf:rest rdf:nil.
	?x0 rdf:first ?anything. 
	?x0 rdf:rest ?x1. 
	?name a :name. ?name :value ?name_value. 
	?name_value rdf:first ?anything. ?name_value rdf:rest ?name_value_rest.
	?x1 :parses_to_rest_of_name_with_rest (?rest ?name_value_rest).
}.

{?X1 :parses_to_rest_of_name_with_rest ?a2.} <= {
	?a2 rdf:first ?X1. ?a2 rdf:rest ?a3. ?a3 rdf:first rdf:nil. ?a3 rdf:rest rdf:nil.}.

{?x0 :parses_to_rest_of_name_with_rest ?a2.} <= {
	?x0 rdf:first ?letter.
	?x0 rdf:rest ?x1. 
	?x1 :parses_to_rest_of_name_with_rest (?rest ?rest_of_name_value).
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?name_cell.
	?name_cell rdf:first ?letter. ?name_cell rdf:rest ?rest_of_name_value.
	?a3 rdf:rest rdf:nil.
}.


{?x0 :parses_to_greeting_sentence_with_rest ?a2} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?name. ?a3 rdf:rest rdf:nil.
	?x0 :parses_to_greeting (?mid0 ?greeting_type). 
	?mid0 :parses_to_delimiter_with_rest ?after_space.
	?after_space :parses_to_name_with_rest (?after_name ?name). 
	?after_name :parses_to_delimiter_with_rest ?after_comma.
	?after_comma :parses_to_greeting (?after_second_greeting ?greeting_type).
	?after_second_greeting :parses_to_char (?rest "!").
}.

{?x0 :parses_to_char ?a2} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?char. ?a3 rdf:rest rdf:nil.
	?x0 rdf:first ?char.
	?x0 rdf:rest ?rest.}.

fin.
#0
query
"""
sentence --> noun_phrase, verb_phrase.
noun_phrase --> determiner, noun.
verb_phrase --> verb, noun_phrase.
verb_phrase --> verb, sentence.

determiner --> [the].
determiner --> [a].
noun --> [cat].
noun --> [mouse].
verb --> [scares].
verb --> [hates].
""" string_builtins:is_split ?l. 
?l :parses_to_dcg_with_rest (rdf:nil ?tree). ?tree :dcg_ast2tau_ast ?tau. ?tau :tau_ast2list_of_chars ?l2. ?l2 string_builtins:is_joined ?output .
fin.
shouldbetrue

