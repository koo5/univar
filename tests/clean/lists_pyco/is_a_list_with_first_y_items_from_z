@include ../../lib/0
@include ../../lib/list
@include ../../lib/eq
@include ../../lib/nat1
@include ../../lib/is_a_list_with_first_y_items_from_z
fin.

query
() :is_a_list_with_first_y_items_from_z (:zero ()).
fin.
shouldbetrue
thatsall

query
?x :is_a_list_with_first_y_items_from_z (?count (:a)).
fin.
shouldbe
rdf:nil :is_a_list_with_first_y_items_from_z (:zero (:a)).
fin.
shouldbe
?x :is_a_list_with_first_y_items_from_z (?one (:a)).
fin.
thatsall

query
(:a) :is_a_list_with_first_y_items_from_z (?count (:a)).
fin.
shouldbetrue
thatsall

query
?x :is_a_list_with_first_y_items_from_z (?count (:a :b)). :zero :has_succ ?one. ?one :has_succ ?two.
fin.
shouldbe
?x :is_a_list_with_first_y_items_from_z (:zero (:a :b)). :zero :has_succ ?one. ?one :has_succ ?two.
fin.
shouldbe
?x :is_a_list_with_first_y_items_from_z (?one (:a :b)). :zero :has_succ ?one. ?one :has_succ ?two.
fin.
shouldbe
?x :is_a_list_with_first_y_items_from_z (?two (:a :b)). :zero :has_succ ?one. ?one :has_succ ?two.
fin.
thatsall


#query
#?x :is_a_list_with_first_y_items_from_z (?count (:a :b :c :d :e :f :g)).
#fin.
#shouldbe
#() :is_a_list_with_first_y_items_from_z (:zero (:a :b :c :d :e :f :g)).
#fin.
#shouldbe
#(:a) :is_a_list_with_first_y_items_from_z (?one (:a :b :c :d :e :f :g)).
#fin.
#shouldbe
#(:a :b) :is_a_list_with_first_y_items_from_z (?two (:a :b :c :d :e :f :g)).
#fin.
#shouldbe
#(:a :b :c) :is_a_list_with_first_y_items_from_z (?many (:a :b :c :d :e :f :g)).
#fin.
#shouldbe
#(:a :b :c :d) :is_a_list_with_first_y_items_from_z (?many (:a :b :c :d :e :f :g)).
#fin.
#shouldbe
#(:a :b :c :d :e) :is_a_list_with_first_y_items_from_z (?many (:a :b :c :d :e :f :g)).
#fin.
#shouldbe
#(:a :b :c :d :e :f) :is_a_list_with_first_y_items_from_z (?many (:a :b :c :d :e :f :g)).
#fin.
#shouldbe
#(:a :b :c :d :e :f :g) :is_a_list_with_first_y_items_from_z (?many (:a :b :c :d :e :f :g)).
#fin.
#thatsall


