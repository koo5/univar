#06:01 < HMC_A> it is the 1 bit full adder circuit example from the guido paper
#06:01 < HMC_A> http://www.agfa.com/w3c/2002/02/thesis/thesis.pdf

--limit 9999999

kb

#definition of a nand gate

{?G :gnand1 ?A.  ?G :gnand2 ?B.  ?G :gnand3 ?C.  ?A :nand1 "false".  ?B :nand2 "false".} => {?C :nand3 "true"}.
{?G :gnand1 ?A.  ?G :gnand2 ?B.  ?G :gnand3 ?C.  ?A :nand1 "false".  ?B :nand2 "true".} => {?C :nand3 "true"}.
{?G :gnand1 ?A.  ?G :gnand2 ?B.  ?G :gnand3 ?C.  ?A :nand1 "true".  ?B :nand2 "false".} => {?C :nand3 "true"}.
{?G :gnand1 ?A.  ?G :gnand2 ?B.  ?G :gnand3 ?C.  ?A :nand1 "true".  ?B :nand2 "true".} => {?C :nand3 "false"}.

#definition of the connection between gates

{?G1 :nandnand2 ?G2.  ?G1 :gnand3 ?X.  ?G2 :gnand2 ?X.  ?X :nand3 ?V.} => {?X :nand2 ?V}.
{?G1 :nandnand1 ?G2.  ?G1 :gnand3 ?X.  ?G2 :gnand1 ?X.  ?X :nand3 ?V.} => {?X :nand1 ?V}.

#The facts of the example:

:a :nand1 "true" .
:b :nand2 "true" .
:cin :nand2 "true" .


:g1 :gnand1 :a .
:g1 :gnand2 :b .
:g1 :gnand3 :a11 .
:g1 :nandnand1 :g3 .
:g1 :nandnand2 :g2 .
:g1 :nandnand2 :g9 .
:g2 :gnand1 :a .
:g2 :gnand2 :a11 .
:g2 :gnand3 :a12 .
:g2 :nandnand1 :g4 .

:g3 :gnand1 :a11 .
:g3 :gnand2 :b .
:g3 :gnand3 :a13 .
:g3 :nandnand2 :g4 .
:g4 :gnand1 :a12 .
:g4 :gnand2 :a13 .
:g4 :gnand3 :a14 .
:g4 :nandnand1 :g6 .
:g4 :nandnand1 :g5 .
:g5 :gnand1 :a14 .
:g5 :gnand2 :cin .
:g5 :gnand3 :a15 .
:g5 :nandnand1 :g8 .
:g5 :nandnand1 :g9 .
:g5 :nandnand2 :g6 .
:g6 :gnand1 :a14 .
:g6 :gnand2 :a15 .
:g6 :gnand3 :a16 .
:g6 :nandnand1 :g7 .
:g7 :gnand1 :a16 .
:g7 :gnand2 :a17 .
:g7 :gnand3 :sum .
:g8 :gnand1 :a15 .
:g8 :gnand2 :cin .
:g8 :gnand3 :a17 .
:g8 :nandnand2 :g7 .
:g9 :gnand1 :a15 .
:g9 :gnand2 :a11 .
:g9 :gnand3 :cout .
fin.


query
:cout :nand3 ?V1q .
:sum :nand3  ?V2q .
fin.


shouldbe
:cout :nand3 "true" .
:sum :nand3  "true" .
fin.


