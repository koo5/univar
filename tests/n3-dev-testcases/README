These testcases reflect the current state of development of the Autonomic reasoner.

issues:
The idiosyncratic testcase syntax. kb/query/shouldbe/shouldbetrue/thatsall, "fin.", "@include"..
We might eventually write a converter from this to some rdf format and back.

not implemented but planned features:
Filtering out duplicate results. Currently we rather test for the absence of this feature.

negation: none implemented yet, only a few builtins. planned: SNAF

quantification:
@forAll and @forSome are ignored. A variable is distinguished by having a question mark in the uri.
If a variable appears in a body of a rule, it is a universal. 
If it has any uppercase letters, it is a universal.

the underscore hack:
An underscore as the last character of a variable name indicates that two triples should be added into the rule's body, as in this example:
For example an "?x_" adds: ?x rdf:first ?xf. ?x rdf:rest ?xr.

lists in rule head:
A list in n3 list syntax, for example (one two three), is expanded in the rule body, not in the rule head. This is to ease complying with the requirement for only one existential in rule head.







about pyco, the current Autonomic reasoner prototype:
back-chaining inferencer. 
order of triples in rule body should not matter, modulo builtins (tbd).
EP-check inspired by euler.js

