
:pre_ldl_dcg :has_value
"""
statements --> statement, [.\\n], statements.
statements --> comment, [\\n], statements.
statements --> [\\n], statements.
statements --> .

comment --> [#], all chars until one of [\\n].

statement --> is_builtin_postprocessed.
is_builtin_postprocessed --> node_name, [ is builtin-postprocessed ], node_name.

statement --> x_is_a_series_of_y_separated_with_z.
x_is_a_series_of_y_separated_with_z --> node_name, [ is a series of ], grammar_item, [ separated with ], grammar_item.

statement --> subtype.
subtype --> node_name, [ works as ], node_name.

statement --> grammar.
grammar --> node_name, [ ++> ], grammar_items, [.].

grammar_items --> grammar_item, [, ], grammar_items.
grammar_items --> grammar_item, [].
grammar_items --> .

grammar_item --> string_literal.
grammar_item --> node_name.
grammar_item --> node_name_with_child_name.
grammar_item --> any_char_except.
grammar_item --> all_chars_until_one_of.

any_char_except --> [any char except ], string_literal.
all_chars_until_one_of --> [all chars until one of ], string_literal.

node_name_with_child_name --> node_name, [:], node_name.

node_name --> string_literal_body, [].

string_literal --> [\\[], string_literal_body, [\\]].

string_literal_body --> builtin-postprocessed string_literal_raw_body.
string_literal_raw_body --> .
string_literal_raw_body --> string_literal_raw_body_item, string_literal_raw_body.

string_literal_raw_body_item --> any char except [\\n\\[\\]\\\\].
string_literal_raw_body_item --> [\\\\n].
string_literal_raw_body_item --> [\\\\\\[].
string_literal_raw_body_item --> [\\\\\\]].
string_literal_raw_body_item --> [\\\\\\\\].

statement --> error.
error --> all chars until one of [\\n], [].
""".

