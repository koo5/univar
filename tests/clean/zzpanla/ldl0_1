@keywords a .
@prefix rdf:      <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix ldl:      <http://ldl.ldl#> .
@prefix string_builtins: <http://loworbit.now.im/rdf/string_builtins#>.
@prefix tau_builtins: <http://loworbit.now.im/rdf/tau_builtins#>.
@prefix : <file://>.

kb

@include ../../ldl/utils
@include ../../ldl/pre_ldl_dcg
@include ../../ldl/dcg_datatypes
@include ../../ldl/ldl_datatypes
@include ../../ldl/parser_of_pre_ldl_dcg
@include ../../ldl/initial_ldl_text
@include ../../ldl/parse_initial_ldl_text_with_the_dcg
@include ../../ldl/bootstrap2lemon
@include ../../ldl/ldl_parser

{?initial_ldl :phase2 ?builtins_statements} <= {
    :dummy tau_builtins:output "initial_ldl:".
    #:dummy tau_builtins:output ?initial_ldl.
    :dummy tau_builtins:output "parsed2builtins...".
    #:dummy tau_builtins:toggle_tracing :dummy.
    ?initial_ldl :parsed2builtins ?builtins_statements.
    :dummy tau_builtins:output "builtins_statements:".
    :dummy tau_builtins:serialize_thing ?builtins_statements.
}.

fin.

query
:dummy tau_builtins:toggle_tracing :dummy.
:pre_ldl_dcg :has_value ?v.
?v string_builtins:strXlst ?l.
:dummy :statement_lines (?l rdf:nil ?grammar_concrete).
:dummy tau_builtins:output "dcg parsed.".
#:dummy tau_builtins:output ?grammar_concrete!rdf:rest!rdf:first!:rhs!rdf:first!:name.
#:dummy tau_builtins:output ?grammar_concrete.
?grammar_concrete :concrete_to_abstract ?grammar.
:dummy tau_builtins:output "concrete_to_abstract.".
#:dummy tau_builtins:serialize_thing ?grammar.
#:o :o :o.
#:dummy tau_builtins:output ?grammar!rdf:
:initial_ldl_text :has_value ?initial_ldl_text_value.
?initial_ldl_text_value string_builtins:strXlst ?initial_ldl_text_list.
(?initial_ldl_text_list ?grammar "statements") :eq ?a1.
(rdf:nil ?initial_ldl :minus_one) :eq ?a2.
:dummy tau_builtins:output "parse_nonterminal...".
?a1 :parse_nonterminal ?a2.
?initial_ldl :phase2 ?builtins_statements.
:dummy tau_builtins:output "ldl:parse_nonterminal:".
?a3 :eq (?initial_ldl_text_list ?builtins_statements "statements").
?a4 :eq (rdf:nil ?_ast :minus_one).
:dummy tau_builtins:toggle_tracing :dummy.
?a3 ldl:parse_nonterminal ?a4.
(?initial_ldl_text_list ?_ast "statements") ldl:parse_nonterminal (rdf:nil ?_ast :minus_one).



fin.
shouldbetrue









#{?x a :world. ?x :has_modules ?MODULES} <= {}.




#{?path :run :dummy} <= {
#    ?path :load ?modules.
#}.



#"""
#lol_module_raw is a kind of module with lol_statement items.
#lol_module is builtin-postprocessed lol_module_raw.
#"""
