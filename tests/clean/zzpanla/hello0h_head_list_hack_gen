@keywords a .
@prefix rdf:      <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix string_builtins: <http://loworbit.now.im/rdf/string_builtins#>.
@prefix : <file://>.
kb


?builtins_aware_list rdf:first ?ITEM; rdf:rest ?REST.


{?x0 :parses_to_hello_with_rest ?a2} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first :hello. ?a3 rdf:rest rdf:nil.
	?x4 rdf:rest ?rest.
	?x3 rdf:rest ?x4. 
	?x2 rdf:rest ?x3. 
	?x1 rdf:rest ?x2. 
	?x0 rdf:rest ?x1. 
	?x0 rdf:first "h". 
	?x1 rdf:first "e". 
	?x2 rdf:first "l". 
	?x3 rdf:first "l". 
	?x4 rdf:first "o". 
}.

{?x0 :parses_to_bye_with_rest ?a2} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first :bye. ?a3 rdf:rest rdf:nil.
	?x2 rdf:rest ?rest.
	?x1 rdf:rest ?x2. 
	?x0 rdf:rest ?x1. 
	?x0 rdf:first "b". 
	?x1 rdf:first "y". 
	?x2 rdf:first "e". 
}.

{?x0 :parses_to_greeting ?a2} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?greeting_type. ?a3 rdf:rest rdf:nil.
	?x0 :parses_to_hello_with_rest (?rest ?greeting_type). 
}.

{?x0 :parses_to_greeting ?a2} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?greeting_type. ?a3 rdf:rest rdf:nil.
	?x0 :parses_to_bye_with_rest (?rest ?greeting_type). 
}.


{?x0 :parses_to_delimiter_with_rest ?rest} <= {
	?x0 rdf:rest ?rest. 
	?x0 rdf:first " ". 
}.

{?x0 :parses_to_delimiter_with_rest ?rest} <= {
	?x0 rdf:rest ?rest. 
	?x0 rdf:first ",". 
}.

{?x a :name. ?x :value ?Y}<={}.

#{(?x0 ?rest ?name) :parses_to_name ?name.} <= {
#        ?x0 rdf:first ?anything. ?x0 rdf:rest ?x1. 
#        ?name a :name. ?name :value ?name_value. 
#        ?name_value rdf:first ?anything. ?name_value rdf:rest ?name_value_rest.
#        (?x1 ?rest ?name_value_rest) :parses_to_rest_of_name_with_rest ?name_value_rest.
#}.

{?x0 :parses_to_name_with_rest ?a2.} <= {
       ?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?name. ?a3 rdf:rest rdf:nil.
       ?x1 :parses_to_rest_of_name_with_rest (?rest ?name_value_rest).
       ?x0 rdf:first ?anything. 
       ?x0 rdf:rest ?x1. 
       ?name a :name. ?name :value ?name_value. 
       ?name_value rdf:first ?anything. ?name_value rdf:rest ?name_value_rest.
}.

{?X1 :parses_to_rest_of_name_with_rest ?a2.} <= {
	?a2 rdf:first ?X1. ?a2 rdf:rest ?a3. ?a3 rdf:first rdf:nil. ?a3 rdf:rest rdf:nil.}.

{?x0 :parses_to_rest_of_name_with_rest ?a2.} <= {
	?x0 rdf:first ?letter.
	?x0 rdf:rest ?x1. 
	?x1 :parses_to_rest_of_name_with_rest (?rest ?rest_of_name_value).
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?name_cell.
	?name_cell rdf:first ?letter. ?name_cell rdf:rest ?rest_of_name_value.
	?a3 rdf:rest rdf:nil.
}.


{?x0 :parses_to_greeting_sentence_with_rest ?a2} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?name. ?a3 rdf:rest rdf:nil.
	?after_second_greeting :parses_to_char (?rest "!").
	?after_comma :parses_to_greeting (?after_second_greeting ?greeting_type).
	?after_name :parses_to_delimiter_with_rest ?after_comma.
	?after_space :parses_to_name_with_rest (?after_name ?name). 
	?mid0 :parses_to_delimiter_with_rest ?after_space.
	?x0 :parses_to_greeting (?mid0 ?greeting_type). 
}.

{?x0 :parses_to_char (?rest ?char)} <= {
	?a2 rdf:first ?rest. ?a2 rdf:rest ?a3. ?a3 rdf:first ?char. ?a3 rdf:rest rdf:nil.
	?x0 rdf:first ?char.
	?x0 rdf:rest ?rest.}.

fin.
#0
query
?what :parses_to_bye_with_rest (rdf:nil :bye). ?what string_builtins:is_joined ?what2.
fin.
shouldbetrue

#1
query
?what :parses_to_hello_with_rest (rdf:nil :hello). ?what string_builtins:is_joined ?what2.
fin.
shouldbetrue

#2
query
?name :value ("T" "i" "m") . ?what :parses_to_greeting_sentence_with_rest (rdf:nil ?name). ?what string_builtins:is_joined ?what2.
fin.
shouldbe
?name :value ("T" "i" "m") . ?what :parses_to_greeting_sentence_with_rest (rdf:nil ?name). ?what string_builtins:is_joined "hello Tim hello!".
fin.

#3
query
("h" "e" "l" "l" "o" " " "T" "i" "m" "," "b" "y" "e" "!") :parses_to_greeting_sentence_with_rest (rdf:nil ?name). ?name :value ("T" "i" "m") . 
fin.
shouldbe
fin.

#4
query
?name :value ("T") . ("b" "y" "e" " " "T" "," "b" "y" "e" "!") :parses_to_greeting_sentence_with_rest (rdf:nil ?name). 
fin.
shouldbetrue

#5
query
?name :value ("T" "i" "m") . ("b" "y" "e" " " "T" "i" "m" "," "b" "y" "e" "!") :parses_to_greeting_sentence_with_rest (rdf:nil ?name). 
fin.
shouldbetrue

#6
query
("b" "y" "e" " " "T" "i" "m" "," "b" "y" "e" "!") :parses_to_greeting_sentence_with_rest (rdf:nil ?name). ?name :value ("T" "i" "m") . 
fin.
shouldbetrue


